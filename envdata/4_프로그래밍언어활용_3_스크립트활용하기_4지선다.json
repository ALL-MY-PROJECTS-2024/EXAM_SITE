{
  "questions": [
    {
      "id": 1,
      "question": "스크립트 언어의 주요 특징이 아닌 것은?",
      "choices": [
        "인터프리터 방식으로 실행된다",
        "플랫폼 독립성을 가진다",
        "정적 타입 선언이 필수이다",
        "코드 작성 및 수정이 간단하다"
      ],
      "correct_answer": "정적 타입 선언이 필수이다",
      "explanation": "스크립트 언어는 동적 타입을 지원하며, 변수의 타입을 명시적으로 선언할 필요가 없습니다.",
      "wrong_answers": {
        "인터프리터 방식으로 실행된다": "스크립트 언어는 한 줄씩 해석하여 실행되는 인터프리터 방식을 사용합니다.",
        "플랫폼 독립성을 가진다": "대부분의 스크립트 언어는 특정 운영 체제에 종속되지 않습니다.",
        "코드 작성 및 수정이 간단하다": "스크립트 언어는 문법이 간결하여 빠르게 작성하고 수정할 수 있습니다."
      }
    },
    {
      "id": 2,
      "question": "다음 중 대표적인 스크립트 언어로 올바른 것은?",
      "choices": ["C", "Python", "Java", "Kotlin"],
      "correct_answer": "Python",
      "explanation": "Python은 대표적인 스크립트 언어 중 하나로, 인터프리터 방식으로 실행됩니다.",
      "wrong_answers": {
        "C": "C는 컴파일 언어이며, 스크립트 언어가 아닙니다.",
        "Java": "Java는 정적 타입을 사용하는 객체지향 언어로, 컴파일을 거쳐 실행됩니다.",
        "Kotlin": "Kotlin은 정적 타입의 컴파일 언어이며, 스크립트 언어가 아닙니다."
      }
    },
    {
      "id": 3,
      "question": "스크립트 언어의 실행 방식은?",
      "choices": [
        "컴파일 후 실행",
        "인터프리터에 의해 바로 실행",
        "컴파일 및 링크 후 실행",
        "바이너리 파일로 변환 후 실행"
      ],
      "correct_answer": "인터프리터에 의해 바로 실행",
      "explanation": "스크립트 언어는 인터프리터 방식으로 실행되며, 코드가 한 줄씩 해석됩니다.",
      "wrong_answers": {
        "컴파일 후 실행": "컴파일 언어는 소스 코드를 기계어로 변환한 후 실행됩니다.",
        "컴파일 및 링크 후 실행": "C와 같은 언어는 컴파일과 링크 과정을 거칩니다.",
        "바이너리 파일로 변환 후 실행": "스크립트 언어는 별도의 바이너리 변환 과정 없이 실행됩니다."
      }
    },
    {
      "id": 4,
      "question": "스크립트 언어가 주로 사용되는 분야는?",
      "choices": [
        "시스템 프로그래밍",
        "애플리케이션 개발",
        "웹 개발과 자동화 작업",
        "임베디드 시스템 개발"
      ],
      "correct_answer": "웹 개발과 자동화 작업",
      "explanation": "스크립트 언어는 웹 개발, 자동화 작업, 데이터 처리 등에서 많이 사용됩니다.",
      "wrong_answers": {
        "시스템 프로그래밍": "시스템 프로그래밍에는 C, C++ 같은 저수준 언어가 주로 사용됩니다.",
        "애플리케이션 개발": "애플리케이션 개발은 Java, C#과 같은 정적 언어가 주로 사용됩니다.",
        "임베디드 시스템 개발": "임베디드 개발에는 메모리 제어가 필요한 C와 같은 언어가 적합합니다."
      }
    },
    {
      "id": 5,
      "question": "JavaScript에서 변수를 선언할 때 사용하는 키워드가 아닌 것은?",
      "choices": ["var", "let", "const", "define"],
      "correct_answer": "define",
      "explanation": "`define`은 JavaScript에서 변수 선언 키워드가 아닙니다.",
      "wrong_answers": {
        "var": "`var`는 변수 선언을 위한 JavaScript의 기존 방식입니다.",
        "let": "`let`은 블록 범위를 가지는 변수를 선언할 때 사용됩니다.",
        "const": "`const`는 상수 값을 선언할 때 사용됩니다."
      }
    },
    {
      "id": 6,
      "question": "Python에서 리스트를 생성하기 위한 문법으로 올바른 것은?",
      "choices": ["{1, 2, 3}", "[1, 2, 3]", "(1, 2, 3)", "<1, 2, 3>"],
      "correct_answer": "[1, 2, 3]",
      "explanation": "Python에서 리스트는 대괄호([])를 사용하여 생성합니다.",
      "wrong_answers": {
        "{1, 2, 3}": "중괄호는 집합(set) 자료형을 나타냅니다.",
        "(1, 2, 3)": "소괄호는 튜플(tuple)을 나타냅니다.",
        "<1, 2, 3>": "Python에서 `< >` 기호는 리스트 생성에 사용되지 않습니다."
      }
    },
    {
      "id": 7,
      "question": "스크립트 언어에서 함수 호출 시 필요한 주요 요소는?",
      "choices": [
        "함수명과 매개변수",
        "함수 선언만",
        "클래스 선언",
        "인터페이스 정의"
      ],
      "correct_answer": "함수명과 매개변수",
      "explanation": "함수를 호출하려면 함수명과 함께 필요한 경우 매개변수를 전달해야 합니다.",
      "wrong_answers": {
        "함수 선언만": "함수 선언만으로는 실행되지 않으며, 호출이 필요합니다.",
        "클래스 선언": "클래스는 객체 지향 프로그래밍에서 사용되며 함수 호출과 관련이 없습니다.",
        "인터페이스 정의": "인터페이스는 메소드의 명세를 정의하며, 직접적인 함수 호출과는 관련이 없습니다."
      }
    },
    {
      "id": 8,
      "question": "Python의 특징 중 올바른 것은?",
      "choices": [
        "컴파일러 기반 언어이다",
        "인터프리터 기반 언어이다",
        "정적 타입 언어이다",
        "플랫폼 종속적 언어이다"
      ],
      "correct_answer": "인터프리터 기반 언어이다",
      "explanation": "Python은 인터프리터 방식으로 실행되며, 동적 타이핑을 지원하는 언어입니다.",
      "wrong_answers": {
        "컴파일러 기반 언어이다": "Python은 컴파일이 필요 없는 인터프리터 기반 언어입니다.",
        "정적 타입 언어이다": "Python은 동적 타입 언어로, 변수의 타입을 명시적으로 선언할 필요가 없습니다.",
        "플랫폼 종속적 언어이다": "Python은 운영 체제에 독립적이며, 다양한 플랫폼에서 실행할 수 있습니다."
      }
    },
    {
      "id": 9,
      "question": "JavaScript에서 조건문을 작성할 때 사용하는 키워드는?",
      "choices": ["if", "loop", "define", "elif"],
      "correct_answer": "if",
      "explanation": "`if`는 JavaScript에서 조건문을 작성할 때 사용하는 키워드입니다.",
      "wrong_answers": {
        "loop": "`loop`는 JavaScript에서 조건문 키워드가 아닙니다.",
        "define": "`define`은 조건문을 작성하는 데 사용되지 않습니다.",
        "elif": "`elif`는 Python에서 사용되는 조건문 키워드입니다."
      }
    },
    {
      "id": 10,
      "question": "스크립트 언어의 주요 장점은?",
      "choices": [
        "실행 속도가 빠르다",
        "대규모 시스템 개발에 적합하다",
        "빠른 프로토타이핑과 유연성 제공",
        "컴파일이 필요 없다"
      ],
      "correct_answer": "빠른 프로토타이핑과 유연성 제공",
      "explanation": "스크립트 언어는 빠른 프로토타이핑과 높은 유연성을 제공하여 개발 속도를 단축할 수 있습니다.",
      "wrong_answers": {
        "실행 속도가 빠르다": "스크립트 언어는 인터프리터 방식으로 실행되어, 컴파일 언어보다 속도가 느릴 수 있습니다.",
        "대규모 시스템 개발에 적합하다": "스크립트 언어는 대규모 프로젝트보다는 자동화, 웹 개발, 데이터 처리 등에 더 적합합니다.",
        "컴파일이 필요 없다": "스크립트 언어는 컴파일 과정 없이 실행되지만, 이는 유일한 장점이 아니라 전체적인 유연성과 빠른 개발이 주요 장점입니다."
      }
    },
    {
      "id": 11,
      "question": "Python에서 파일을 읽기 모드로 여는 함수는?",
      "choices": [
        "open('파일명', 'w')",
        "open('파일명', 'r')",
        "open('파일명', 'a')",
        "open('파일명', 'rw')"
      ],
      "correct_answer": "open('파일명', 'r')",
      "explanation": "Python에서 `open('파일명', 'r')`은 파일을 읽기 모드로 여는 함수입니다.",
      "wrong_answers": {
        "open('파일명', 'w')": "쓰기 모드로 파일을 열며 기존 내용을 삭제하고 새로 작성합니다.",
        "open('파일명', 'a')": "추가 모드로 파일을 열어 기존 내용에 새로운 내용을 덧붙입니다.",
        "open('파일명', 'rw')": "'rw'는 잘못된 모드이며, Python에서 사용되지 않습니다."
      }
    },
    {
      "id": 12,
      "question": "JavaScript에서 배열의 길이를 확인하는 방법은?",
      "choices": ["array.size", "array.length", "array.count", "array.size()"],
      "correct_answer": "array.length",
      "explanation": "JavaScript에서 배열의 길이를 확인하려면 `.length` 속성을 사용해야 합니다.",
      "wrong_answers": {
        "array.size": "JavaScript에는 `size` 속성이 존재하지 않습니다.",
        "array.count": "JavaScript 배열에는 `count` 속성이 없으며, `length`를 사용해야 합니다.",
        "array.size()": "`size()` 메소드는 JavaScript에서 배열의 길이를 확인하는 방법이 아닙니다."
      }
    },
    {
      "id": 13,
      "question": "Python에서 반복문을 사용할 때 사용하는 키워드는?",
      "choices": ["repeat", "while", "do-while", "until"],
      "correct_answer": "while",
      "explanation": "Python에서 반복문을 사용할 때는 `while` 또는 `for` 키워드를 사용합니다.",
      "wrong_answers": {
        "repeat": "Python에서는 `repeat` 키워드를 지원하지 않습니다.",
        "do-while": "Python에는 `do-while` 문법이 존재하지 않으며, 대신 `while`을 사용합니다.",
        "until": "`until` 키워드는 Python에서 지원되지 않습니다."
      }
    },
    {
      "id": 14,
      "question": "다음 중 스크립트 언어가 아닌 것은?",
      "choices": ["Ruby", "Bash", "Assembly", "Perl"],
      "correct_answer": "Assembly",
      "explanation": "Assembly(어셈블리 언어)는 저수준 언어이며, 인터프리터 방식이 아닌 기계어와 직접적으로 연결되는 언어입니다.",
      "wrong_answers": {
        "Ruby": "Ruby는 동적 타이핑을 지원하는 대표적인 스크립트 언어입니다.",
        "Bash": "Bash는 UNIX/Linux에서 사용되는 스크립트 언어입니다.",
        "Perl": "Perl은 강력한 텍스트 처리 기능을 제공하는 스크립트 언어입니다."
      }
    },
    {
      "id": 15,
      "question": "Bash 스크립트에서 변수에 값을 할당하는 올바른 문법은?",
      "choices": ["var x = 5", "x: 5", "x = 5", "let x = 5"],
      "correct_answer": "x = 5",
      "explanation": "Bash에서는 변수 할당 시 공백 없이 `x=5`와 같이 작성해야 합니다.",
      "wrong_answers": {
        "var x = 5": "`var` 키워드는 JavaScript에서 사용되며, Bash에서는 지원되지 않습니다.",
        "x: 5": "Bash에서는 `:` 기호를 사용하여 변수 값을 할당하지 않습니다.",
        "let x = 5": "`let`은 JavaScript와 같은 언어에서 변수 선언에 사용되지만, Bash에서는 지원되지 않습니다."
      }
    }
  ]
}
