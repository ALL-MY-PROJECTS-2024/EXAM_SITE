{
  "questions": [
    {
      "id": 1,
      "question": "소스코드 검증에서 정적 테스트 도구는 __________ 단계에서 결함을 조기에 발견합니다.",
      "correct_answer": "개발 초기",
      "explanation": "정적 테스트 도구는 코드를 실행하지 않고 개발 초기 단계에서 코드 결함을 조기에 발견하는 역할을 한다."
    },
    {
      "id": 2,
      "question": "동적 테스트 도구는 테스트 미수행 코드나 특정 코드 구조의 __________를 확인합니다.",
      "correct_answer": "테스트 충분성",
      "explanation": "동적 테스트 도구는 실행된 코드와 실행되지 않은 코드를 분석하여 테스트가 충분히 수행되었는지를 확인한다."
    },
    {
      "id": 3,
      "question": "코드 인스펙션은 사전에 정의된 __________ 기반으로 소스코드를 점검합니다.",
      "correct_answer": "작성 규칙",
      "explanation": "코드 인스펙션은 사전에 정의된 코드 작성 규칙을 기반으로 위반 사항을 점검하는 정적 분석 기법이다."
    },
    {
      "id": 4,
      "question": "코드 인스펙션 Rule 중 성능 개선 Rule은 __________와 같은 문제를 점검합니다.",
      "correct_answer": "메모리 누수",
      "explanation": "성능 개선 Rule에서는 메모리 누수, 불필요한 객체 생성, 비효율적인 반복문 등의 성능 저하 요인을 점검한다."
    },
    {
      "id": 5,
      "question": "형상관리 시스템에서 '반출'(Check Out)은 형상항목을 __________에서 가져오는 과정입니다.",
      "correct_answer": "저장소",
      "explanation": "Check Out은 개발자가 소스코드를 수정하기 위해 형상관리 시스템의 저장소에서 가져오는 과정이다."
    },
    {
      "id": 6,
      "question": "정규 표현식에서 '[]'는 __________를 나타냅니다.",
      "correct_answer": "문자 클래스",
      "explanation": "정규 표현식에서 대괄호([])는 특정 문자 집합을 정의하는 문자 클래스를 의미한다."
    },
    {
      "id": 7,
      "question": "소스코드 검증에서 정보성(Info.)으로 제공되는 위반 사항은 개발자가 __________하여 적용할 수 있습니다.",
      "correct_answer": "참고",
      "explanation": "정보성(Info.) 위반 사항은 필수 수정이 아니라 권고 사항으로, 개발자가 필요에 따라 참고하여 적용할 수 있다."
    },
    {
      "id": 8,
      "question": "테스트 프레임워크는 테스트 코드를 작성하고 __________ 환경을 제공합니다.",
      "correct_answer": "자동화된",
      "explanation": "테스트 프레임워크는 테스트 코드를 작성하고 실행을 자동화하는 환경을 제공하여 테스트 효율성을 높인다."
    },
    {
      "id": 9,
      "question": "JUnit에서 assertArrayEquals 함수는 두 배열의 __________ 여부를 확인합니다.",
      "correct_answer": "일치",
      "explanation": "JUnit의 assertArrayEquals 함수는 두 배열의 요소가 동일한지를 비교하여 테스트를 수행한다."
    },
    {
      "id": 10,
      "question": "코드 인스펙션 Rule 심각도 중 'Blocker'는 반드시 __________해야 하는 위반 사항입니다.",
      "correct_answer": "수정",
      "explanation": "'Blocker' 수준의 위반 사항은 치명적인 오류로 반드시 수정해야 하며, 해결되지 않으면 배포가 불가능하다."
    },
    {
      "id": 11,
      "question": "코드 인스펙션 수행 절차는 점검 Rule 정의, 점검 수행, 점검 결과 __________로 구성됩니다.",
      "correct_answer": "검증",
      "explanation": "코드 인스펙션은 사전에 정의된 Rule을 기반으로 점검을 수행하며, 마지막으로 점검 결과를 검증하는 단계가 포함된다."
    },
    {
      "id": 12,
      "question": "정적 테스트 도구는 코딩 오류, 성능 저하, 보안 __________ 등을 조기에 발견합니다.",
      "correct_answer": "취약점",
      "explanation": "정적 테스트 도구는 보안 취약점을 실행 없이 분석하여 조기에 발견하고 수정할 수 있도록 돕는다."
    },
    {
      "id": 13,
      "question": "동적 테스트 도구는 애플리케이션의 __________을(를) 제고할 수 있습니다.",
      "correct_answer": "안정성",
      "explanation": "동적 테스트 도구는 애플리케이션을 실제 실행하며 테스트를 수행하여 안정성을 확보하는 데 도움을 준다."
    },
    {
      "id": 14,
      "question": "테스트 프레임워크에서 테스트 코드는 테스트 __________와 연계하여 동작합니다.",
      "correct_answer": "빌드 도구",
      "explanation": "테스트 프레임워크는 일반적으로 빌드 도구와 연계되어 동작하며, CI/CD 파이프라인에서 자동 테스트를 수행할 수 있다."
    },
    {
      "id": 15,
      "question": "코드 인스펙션 도구는 일반적으로 __________와 연계하여 자동으로 점검을 수행합니다.",
      "correct_answer": "빌드 도구",
      "explanation": "코드 인스펙션 도구는 빌드 도구와 연계하여 코드 작성 시 자동으로 점검을 수행하며, 품질을 유지하는 역할을 한다."
    }
  ]
}
