{
  "questions": [
    {
      "id": 1,
      "question": "데이터 사전에는 __________, 뷰, 함수, 프로시저와 같은 메타 데이터가 포함되어 있다.",
      "correct_answer": "테이블",
      "explanation": "데이터 사전에는 테이블, 뷰, 함수, 프로시저 등의 메타 데이터가 저장되며, 이를 통해 데이터베이스 객체에 대한 정보를 관리할 수 있다."
    },
    {
      "id": 2,
      "question": "인덱스는 테이블의 데이터 검색 속도를 높이기 위해 __________에 의해 생성되거나, 사용자가 직접 생성할 수 있다.",
      "correct_answer": "DBMS",
      "explanation": "DBMS는 기본 키나 고유 키(Unique Key) 제약 조건을 설정할 때 자동으로 인덱스를 생성할 수 있으며, 사용자가 직접 `CREATE INDEX` 명령어를 사용하여 인덱스를 생성할 수도 있다."
    },
    {
      "id": 3,
      "question": "뷰(View)는 테이블 데이터를 조작하지 않고 __________ 형태로 제공하는 가상의 테이블이다.",
      "correct_answer": "논리적",
      "explanation": "뷰는 실제 데이터를 저장하지 않고 논리적으로 데이터를 제공하는 가상의 테이블이며, 복잡한 쿼리를 단순화하거나 데이터 보안을 강화하는 데 활용된다."
    },
    {
      "id": 4,
      "question": "테이블과 뷰 정보를 모두 조회하려면 데이터 사전의 __________ 뷰를 사용할 수 있다.",
      "correct_answer": "DBA_OBJECTS",
      "explanation": "`DBA_OBJECTS` 뷰는 데이터베이스 내 모든 객체(테이블, 뷰, 인덱스 등)에 대한 정보를 제공하는 데이터 사전 뷰이다."
    },
    {
      "id": 5,
      "question": "데이터베이스의 모든 테이블 목록을 확인하려면 __________ 뷰를 조회해야 한다.",
      "correct_answer": "DBA_TABLES",
      "explanation": "`DBA_TABLES` 뷰는 데이터베이스 내 모든 테이블 목록을 조회하는 데 사용되며, 현재 사용자의 테이블만 확인하려면 `USER_TABLES`를 사용할 수 있다."
    },
    {
      "id": 6,
      "question": "뷰를 생성할 때 사용되는 기본 명령어는 __________이다.",
      "correct_answer": "CREATE VIEW",
      "explanation": "`CREATE VIEW` 명령어는 기존 테이블의 데이터를 기반으로 새로운 가상 테이블(뷰)을 생성하는 데 사용된다."
    },
    {
      "id": 7,
      "question": "트랜잭션 관리에서 데이터 변경을 취소하려면 __________ 명령어를 사용한다.",
      "correct_answer": "ROLLBACK",
      "explanation": "`ROLLBACK` 명령어는 현재 진행 중인 트랜잭션을 취소하고 마지막 `COMMIT` 또는 `SAVEPOINT` 상태로 되돌리는 역할을 한다."
    },
    {
      "id": 8,
      "question": "인덱스를 생성하기 위한 SQL 명령어는 __________이다.",
      "correct_answer": "CREATE INDEX",
      "explanation": "`CREATE INDEX` 명령어는 테이블에서 데이터 검색 속도를 향상시키기 위해 인덱스를 생성하는 데 사용된다."
    },
    {
      "id": 9,
      "question": "데이터베이스 내의 인덱스 목록을 확인하려면 __________ 뷰를 조회한다.",
      "correct_answer": "DBA_INDEX",
      "explanation": "`DBA_INDEX` 뷰는 데이터베이스에 존재하는 모든 인덱스 정보를 조회하는 데 사용된다. 현재 사용자의 인덱스만 조회하려면 `USER_INDEXES` 뷰를 사용할 수 있다."
    },
    {
      "id": 10,
      "question": "뷰를 수정하려면 __________ 명령어를 사용하여 기존 뷰를 업데이트할 수 있다.",
      "correct_answer": "ALTER VIEW",
      "explanation": "`ALTER VIEW` 명령어는 기존 뷰의 정의를 변경하는 데 사용되며, 뷰의 쿼리 내용을 수정하거나 새로운 컬럼을 추가하는 등의 작업을 수행할 수 있다."
    },
    {
      "id": 11,
      "question": "데이터베이스에서 특정 사용자가 소유한 뷰를 조회하려면 __________ 뷰를 사용한다.",
      "correct_answer": "USER_VIEWS",
      "explanation": "`USER_VIEWS` 뷰는 현재 사용자가 소유한 뷰 목록을 제공하며, 뷰의 정의 정보를 확인할 수 있다."
    },
    {
      "id": 12,
      "question": "SQL에서 데이터를 삽입하거나 삭제하는 명령어는 __________로 불린다.",
      "correct_answer": "DML",
      "explanation": "데이터 조작 언어(Data Manipulation Language, DML)는 `INSERT`, `UPDATE`, `DELETE` 등의 명령어를 포함하며, 데이터의 조작을 수행한다."
    },
    {
      "id": 13,
      "question": "데이터 사전의 __________ 뷰는 모든 데이터베이스 객체에 대한 정보를 제공한다.",
      "correct_answer": "ALL_OBJECT",
      "explanation": "`ALL_OBJECTS` 뷰는 현재 사용자가 접근할 수 있는 모든 데이터베이스 객체(테이블, 뷰, 인덱스 등)에 대한 정보를 제공한다."
    },
    {
      "id": 14,
      "question": "기본키는 데이터베이스의 __________ 제약 조건 중 하나이다.",
      "correct_answer": "무결성",
      "explanation": "기본키(Primary Key)는 데이터의 무결성을 보장하는 제약 조건 중 하나로, 각 행을 고유하게 식별하고 중복을 허용하지 않는다."
    },
    {
      "id": 15,
      "question": "뷰를 제거할 때 사용하는 SQL 명령어는 __________이다.",
      "correct_answer": "DROP VIEW",
      "explanation": "`DROP VIEW` 명령어는 기존에 생성된 뷰를 삭제하는 데 사용되며, 삭제된 뷰는 복구할 수 없다."
    }
  ]
}
