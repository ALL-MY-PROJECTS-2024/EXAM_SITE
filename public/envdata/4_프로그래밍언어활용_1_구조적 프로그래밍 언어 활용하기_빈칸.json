{
  "questions": [
    {
      "id": 1,
      "question": "구조적 프로그래밍은 구조화 프로그래밍으로도 불리며, ________, ________, ________ 구조를 통하여 설계된다.",
      "correct_answer": "순차, 선택, 반복",
      "explanation": "구조적 프로그래밍은 프로그램의 흐름을 명확하게 정의하기 위해 순차 구조, 선택 구조, 반복 구조의 세 가지 기본 구조를 사용하여 설계된다."
    },
    {
      "id": 2,
      "question": "데이터 흐름도에서 데이터 저장소는 ________으로 표기된다.",
      "correct_answer": "두 개의 평행선",
      "explanation": "DFD(데이터 흐름도)에서 데이터 저장소는 두 개의 평행선으로 표기되며, 시스템 내에서 데이터를 저장하는 역할을 한다."
    },
    {
      "id": 3,
      "question": "구조적 분석 단계에서 작성되는 주요 다이어그램은 ________이다.",
      "correct_answer": "데이터 흐름도(DFD)",
      "explanation": "구조적 분석 단계에서는 시스템의 데이터 흐름과 처리를 시각적으로 표현하기 위해 데이터 흐름도(DFD)를 작성한다."
    },
    {
      "id": 4,
      "question": "조건문에서 if-else문은 ________과 ________의 결과에 따라 분기된다.",
      "correct_answer": "참, 거짓",
      "explanation": "if-else문은 주어진 조건이 참(true)인지 거짓(false)인지에 따라 서로 다른 코드 블록을 실행하는 선택 구조이다."
    },
    {
      "id": 5,
      "question": "DFD 구성 요소 중 데이터를 원하는 데이터로 변환하여 출력시키는 과정은 ________이다.",
      "correct_answer": "프로세스",
      "explanation": "DFD에서 프로세스는 데이터를 입력받아 원하는 형태로 변환한 후 출력하는 기능을 수행한다."
    },
    {
      "id": 6,
      "question": "데이터 흐름도에서 외부 엔티티는 ________으로 표시된다.",
      "correct_answer": "사각형",
      "explanation": "DFD에서 외부 엔티티는 시스템 외부에서 데이터를 제공하거나 받는 요소를 나타내며, 사각형으로 표기된다."
    },
    {
      "id": 7,
      "question": "반복 구조를 구현하기 위한 기본 명령어는 ________와 ________이다.",
      "correct_answer": "for, while",
      "explanation": "반복 구조는 특정 코드 블록을 여러 번 실행할 수 있도록 하며, 이를 구현하기 위해 `for`와 `while`을 사용한다."
    },
    {
      "id": 8,
      "question": "구조적 프로그래밍 언어에서 모듈 간 결합도를 낮추기 위해 ________를 고려한다.",
      "correct_answer": "결합도 감소",
      "explanation": "모듈 간 결합도를 낮추면 독립성이 증가하여 유지보수와 확장성이 향상되므로, 이를 위해 결합도를 낮추는 설계를 고려해야 한다."
    },
    {
      "id": 9,
      "question": "모듈 내부의 연관성을 높이기 위해 ________를 강화한다.",
      "correct_answer": "응집도",
      "explanation": "모듈 내부의 기능적 관련성을 높이는 것을 응집도라고 하며, 높은 응집도를 유지하면 모듈의 재사용성과 유지보수성이 향상된다."
    },
    {
      "id": 10,
      "question": "구조적 프로그래밍 설계의 주요 단위 중 하나로 데이터의 의미, 형식, 길이 등을 정의하는 것은 ________이다.",
      "correct_answer": "자료사전",
      "explanation": "자료사전은 시스템에서 사용되는 데이터의 의미, 형식, 길이 등을 정의하는 문서로, 데이터의 명확성을 보장하는 역할을 한다."
    },
    {
      "id": 11,
      "question": "특정 상태에서 다른 상태로 변경되는 과정을 나타내는 다이어그램은 ________이다.",
      "correct_answer": "상태 전이도(STD)",
      "explanation": "상태 전이도(STD, State Transition Diagram)는 시스템이나 객체의 상태 변화와 전이 과정을 시각적으로 표현하는 다이어그램이다."
    },
    {
      "id": 12,
      "question": "데이터 흐름도를 작성할 때 데이터의 입출력을 나타내기 위해 ________을(를) 사용한다.",
      "correct_answer": "화살표",
      "explanation": "DFD(데이터 흐름도)에서 화살표는 데이터의 흐름, 즉 데이터가 입력되거나 출력되는 과정을 나타내는 데 사용된다."
    },
    {
      "id": 13,
      "question": "C 언어는 ________ 언어와 ________ 언어의 특성을 동시에 가진다.",
      "correct_answer": "고급, 저급",
      "explanation": "C 언어는 고급 언어의 편리한 문법을 제공하면서도 하드웨어 제어가 가능한 저급 언어의 특성을 함께 가진다."
    },
    {
      "id": 14,
      "question": "프로그램 코드가 위에서 아래로만 일직선으로 실행되는 구조는 ________이다.",
      "correct_answer": "순차 구조",
      "explanation": "순차 구조는 프로그램 코드가 조건문이나 반복문 없이 위에서 아래로 순차적으로 실행되는 가장 기본적인 실행 구조이다."
    },
    {
      "id": 15,
      "question": "프로그램 설계에서 각 기능을 분리하여 작성한 명세서는 ________이다.",
      "correct_answer": "소단위 명세",
      "explanation": "소단위 명세는 프로그램 설계에서 각 기능별 동작을 구체적으로 기술한 문서로, 모듈화 및 구조적 설계를 지원한다."
    }
  ]
}
