{
  "questions": [
    {
      "id": 31,
      "question": "데이터베이스의 기본 특징으로 올바르지 않은 것은?",
      "options": [
        {"a": "실시간 접근성"},
        {"b": "동시 공용"},
        {"c": "데이터의 변경 불가능성"},
        {"d": "계속적 변화"}
      ],
      "answer": "c"
    },
    {
      "id": 32,
      "question": "관계형 데이터베이스의 주요 구성 요소는?",
      "options": [
        {"a": "노드"},
        {"b": "테이블"},
        {"c": "객체"},
        {"d": "파일"}
      ],
      "answer": "b"
    },
    {
      "id": 33,
      "question": "트랜잭션의 ACID 속성 중 데이터 일관성을 보장하는 것은?",
      "options": [
        {"a": "Atomicity"},
        {"b": "Consistency"},
        {"c": "Isolation"},
        {"d": "Durability"}
      ],
      "answer": "b"
    },
    {
      "id": 34,
      "question": "DDL 명령어에 해당하지 않는 것은?",
      "options": [
        {"a": "CREATE"},
        {"b": "DROP"},
        {"c": "SELECT"},
        {"d": "ALTER"}
      ],
      "answer": "c"
    },
    {
      "id": 35,
      "question": "관계형 데이터베이스의 데이터 간 관계는 주로 무엇으로 표현되는가?",
      "options": [
        {"a": "노드"},
        {"b": "키와 값"},
        {"c": "기본키와 외래키"},
        {"d": "데이터 그래프"}
      ],
      "answer": "c"
    },
    {
      "id": 36,
      "question": "데이터베이스 관리시스템(DBMS)의 주요 기능이 아닌 것은?",
      "options": [
        {"a": "동시성 제어"},
        {"b": "회복 관리"},
        {"c": "데이터 시각화"},
        {"d": "보안 관리"}
      ],
      "answer": "c"
    },
    {
      "id": 37,
      "question": "정규화의 주요 목적은?",
      "options": [
        {"a": "데이터 중복 제거"},
        {"b": "데이터 조회 속도 증가"},
        {"c": "데이터 압축"},
        {"d": "데이터 암호화"}
      ],
      "answer": "a"
    },
    {
      "id": 38,
      "question": "DML(Data Manipulation Language)의 주요 명령어가 아닌 것은?",
      "options": [
        {"a": "INSERT"},
        {"b": "SELECT"},
        {"c": "UPDATE"},
        {"d": "GRANT"}
      ],
      "answer": "d"
    },
    {
      "id": 39,
      "question": "객체지향형 데이터베이스의 특징으로 적합한 것은?",
      "options": [
        {"a": "계층 구조"},
        {"b": "객체 재사용"},
        {"c": "데이터 간의 고정 관계"},
        {"d": "레코드 기반 접근"}
      ],
      "answer": "b"
    },
    {
      "id": 40,
      "question": "트랜잭션의 원자성(Atomicity)은 무엇을 의미하는가?",
      "options": [
        {"a": "데이터의 무결성을 보장"},
        {"b": "모든 작업이 완료되거나 모두 실패하는 것"},
        {"c": "데이터의 동시 접근 가능"},
        {"d": "장애 발생 시 자동 복구"}
      ],
      "answer": "b"
    },
    {
      "id": 41,
      "question": "SQL의 표준에서 JOIN 연산자가 처음 추가된 버전은?",
      "options": [
        {"a": "SQL-86"},
        {"b": "SQL-89"},
        {"c": "SQL-92"},
        {"d": "SQL:1999"}
      ],
      "answer": "c"
    },
    {
      "id": 42,
      "question": "다음 중 관계형 데이터베이스의 장점은?",
      "options": [
        {"a": "데이터 저장 용량 증가"},
        {"b": "복잡한 구조 관리 용이"},
        {"c": "데이터 무결성 유지"},
        {"d": "실시간 분석"}
      ],
      "answer": "c"
    },
    {
      "id": 43,
      "question": "데이터베이스 종류 중 데이터를 계층적으로 저장하는 방식은?",
      "options": [
        {"a": "관계형 데이터베이스"},
        {"b": "객체지향형 데이터베이스"},
        {"c": "계층형 데이터베이스"},
        {"d": "망형 데이터베이스"}
      ],
      "answer": "c"
    },
    {
      "id": 44,
      "question": "트랜잭션 고립화 수준 중 가장 낮은 수준은?",
      "options": [
        {"a": "Read Committed"},
        {"b": "Read Uncommitted"},
        {"c": "Repeatable Read"},
        {"d": "Serializable"}
      ],
      "answer": "b"
    },
    {
      "id": 45,
      "question": "PostgreSQL에서 다중 테이블을 상속받아 생성할 수 있는 기능은?",
      "options": [
        {"a": "ACID 지원"},
        {"b": "테이블 상속"},
        {"c": "트랜잭션 처리"},
        {"d": "데이터 암호화"}
      ],
      "answer": "b"
    }
  ]
}
