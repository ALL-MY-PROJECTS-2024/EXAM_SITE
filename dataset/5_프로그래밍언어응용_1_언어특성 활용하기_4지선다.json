{
  "questions": [
    {
      "id": 1,
      "question": "프로그래밍 언어 중 컴퓨터가 직접 이해할 수 있는 언어로, 실행 속도가 빠르나 유지관리가 어려운 언어는 무엇인가?",
      "options": [
        {"a": "고급언어"},
        {"b": "저급언어"},
        {"c": "객체지향언어"},
        {"d": "함수형 언어"}
      ],
      "answer": "b"
    },
    {
      "id": 2,
      "question": "다음 중 컴파일 언어에 속하지 않는 것은?",
      "options": [
        {"a": "C"},
        {"b": "C++"},
        {"c": "Python"},
        {"d": "FORTRAN"}
      ],
      "answer": "c"
    },
    {
      "id": 3,
      "question": "고급언어를 컴퓨터가 이해할 수 있도록 번역하는 도구는 무엇인가?",
      "options": [
        {"a": "번역기"},
        {"b": "인터프리터"},
        {"c": "컴파일러"},
        {"d": "디버거"}
      ],
      "answer": "c"
    },
    {
      "id": 4,
      "question": "다음 중 절차형 언어가 아닌 것은?",
      "options": [
        {"a": "FORTRAN"},
        {"b": "Pascal"},
        {"c": "JAVA"},
        {"d": "C"}
      ],
      "answer": "c"
    },
    {
      "id": 5,
      "question": "객체 간의 메시지 통신을 통해 동작하며 상속, 캡슐화, 다형성 등의 특징을 가진 언어 유형은?",
      "options": [
        {"a": "명령형 언어"},
        {"b": "객체지향언어"},
        {"c": "함수형 언어"},
        {"d": "논리형 언어"}
      ],
      "answer": "b"
    },
    {
      "id": 6,
      "question": "\"Python\"이 속하는 언어 분류는?",
      "options": [
        {"a": "컴파일 언어"},
        {"b": "인터프리터 언어"},
        {"c": "바이트코드 언어"},
        {"d": "저급언어"}
      ],
      "answer": "b"
    },
    {
      "id": 7,
      "question": "다음 중 \"명령형 언어\"의 예시는?",
      "options": [
        {"a": "Scala"},
        {"b": "LISP"},
        {"c": "PROLOG"},
        {"d": "FORTRAN"}
      ],
      "answer": "d"
    },
    {
      "id": 8,
      "question": "다음 중 함수형 언어에 속하지 않는 것은?",
      "options": [
        {"a": "LISP"},
        {"b": "Scala"},
        {"c": "JAVA"},
        {"d": "Haskell"}
      ],
      "answer": "c"
    },
    {
      "id": 9,
      "question": "다음 중 저급언어의 단점으로 옳지 않은 것은?",
      "options": [
        {"a": "유지관리가 어렵다."},
        {"b": "기계마다 기계어가 상이하다."},
        {"c": "가독성이 높다."},
        {"d": "추상화 수준이 낮다."}
      ],
      "answer": "c"
    },
    {
      "id": 10,
      "question": "컴파일러 방식의 장점은?",
      "options": [
        {"a": "실행 파일 생성 불필요"},
        {"b": "즉시 실행 가능"},
        {"c": "실행 속도가 빠름"},
        {"d": "문장 단위 번역"}
      ],
      "answer": "c"
    },
    {
      "id": 11,
      "question": "논리형 언어의 대표적인 예시는?",
      "options": [
        {"a": "PROLOG"},
        {"b": "C++"},
        {"c": "Python"},
        {"d": "Scala"}
      ],
      "answer": "a"
    },
    {
      "id": 12,
      "question": "객체지향 프로그래밍의 주요 특징이 아닌 것은?",
      "options": [
        {"a": "캡슐화"},
        {"b": "다형성"},
        {"c": "절차적 처리"},
        {"d": "상속"}
      ],
      "answer": "c"
    },
    {
      "id": 13,
      "question": "빌드 방식에 따른 분류에서, 소스 코드를 한 줄씩 번역하며 실행하는 언어는?",
      "options": [
        {"a": "인터프리터 언어"},
        {"b": "컴파일 언어"},
        {"c": "바이트 코드 언어"},
        {"d": "저급언어"}
      ],
      "answer": "a"
    },
    {
      "id": 14,
      "question": "다음 중 개발 편의성 측면에서 고급언어에 대한 설명으로 옳은 것은?",
      "options": [
        {"a": "기계가 직접 이해 가능"},
        {"b": "번역 과정이 불필요"},
        {"c": "가독성이 높음"},
        {"d": "호환성이 낮음"}
      ],
      "answer": "c"
    },
    {
      "id": 15,
      "question": "다음 중 프로그래밍 언어의 분류 체계로 적합하지 않은 것은?",
      "options": [
        {"a": "개발 편의성"},
        {"b": "실행 및 구현 방식"},
        {"c": "빌드 방식"},
        {"d": "알고리즘 방식"}
      ],
      "answer": "d"
    }
  ]
}
