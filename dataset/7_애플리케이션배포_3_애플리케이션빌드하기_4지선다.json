{
  "questions": [
    {
      "id": 1,
      "question": "애플리케이션 빌드 시스템의 주요 목적은 무엇입니까?",
      "options": [
        {"a": "소스코드를 실행 가능한 상태로 변환"},
        {"b": "애플리케이션 배포 스크립트 작성"},
        {"c": "소스코드의 품질 측정"},
        {"d": "테스트 커버리지 확인"}
      ],
      "answer": "a"
    },
    {
      "id": 2,
      "question": "컴파일 언어의 빌드 과정에 포함되지 않는 단계는 무엇입니까?",
      "options": [
        {"a": "전처리기"},
        {"b": "파싱"},
        {"c": "테스트 실행"},
        {"d": "링킹"}
      ],
      "answer": "c"
    },
    {
      "id": 3,
      "question": "Byte Code 언어(Java, C# 등)는 컴파일 결과물을 _________으로 생성합니다.",
      "options": [
        {"a": "기계어"},
        {"b": "class 파일"},
        {"c": "실행 파일"},
        {"d": "DLL 파일"}
      ],
      "answer": "b"
    },
    {
      "id": 4,
      "question": "빌드 스크립트 작성 시 가장 적합한 도구는 무엇입니까?",
      "options": [
        {"a": "Maven"},
        {"b": "Jenkins"},
        {"c": "Ant"},
        {"d": "Gradle"}
      ],
      "answer": "a"
    },
    {
      "id": 5,
      "question": "지속적인 통합(CI) 환경에서 제공되지 않는 기능은 무엇입니까?",
      "options": [
        {"a": "소스코드 품질 측정"},
        {"b": "자동화된 스케줄 관리"},
        {"c": "빌드 결과 자동 배포"},
        {"d": "리소스 자동 복구"}
      ],
      "answer": "d"
    },
    {
      "id": 6,
      "question": "빌드 스크립트를 작성할 때 가장 먼저 수행해야 할 작업은?",
      "options": [
        {"a": "빌드 단위 정의"},
        {"b": "배포 스크립트 작성"},
        {"c": "빌드 도구 설치"},
        {"d": "형상관리 서버 설정"}
      ],
      "answer": "a"
    },
    {
      "id": 7,
      "question": "애플리케이션 배포 시 다수 서버에 동시 배포를 수행하기 위해 필요한 것은?",
      "options": [
        {"a": "동시 배포 작업 정의"},
        {"b": "배포 스크립트 최적화"},
        {"c": "서버 확장 구성"},
        {"d": "배포 로그 분석"}
      ],
      "answer": "a"
    },
    {
      "id": 8,
      "question": "빌드 도구와 테스트 도구를 연계할 때 가장 중요한 점은?",
      "options": [
        {"a": "도구의 버전과 연계 호환성 확인"},
        {"b": "배포 시 사용될 리소스 정의"},
        {"c": "테스트 시나리오 작성"},
        {"d": "형상관리 프로세스 점검"}
      ],
      "answer": "a"
    },
    {
      "id": 9,
      "question": "인터프리터 언어의 빌드 과정이 다른 언어에 비해 가지는 장점은?",
      "options": [
        {"a": "높은 보안성"},
        {"b": "컴파일 속도 향상"},
        {"c": "실행 파일 생성"},
        {"d": "복잡한 번역 과정"}
      ],
      "answer": "b"
    },
    {
      "id": 10,
      "question": "릴리즈 버전과 개발 버전을 분리하는 주요 이유는?",
      "options": [
        {"a": "소스코드 품질 유지"},
        {"b": "배포 속도 개선"},
        {"c": "버전 체계 관리"},
        {"d": "테스트 시간 단축"}
      ],
      "answer": "c"
    },
    {
      "id": 11,
      "question": "애플리케이션 빌드에서 사용되는 테스트 커버리지 측정 유형 중 조건 커버리지는 무엇을 확인합니까?",
      "options": [
        {"a": "분기문 내 조건식의 모든 경우"},
        {"b": "소스 코드의 실행 시간"},
        {"c": "데이터베이스 연결 상태"},
        {"d": "배포 도구의 설정 값"}
      ],
      "answer": "a"
    },
    {
      "id": 12,
      "question": "테스트 프레임워크는 테스트 코드를 작성하고 ________ 환경을 제공합니다.",
      "options": [
        {"a": "자동화된"},
        {"b": "병렬"},
        {"c": "보안된"},
        {"d": "수동화된"}
      ],
      "answer": "a"
    },
    {
      "id": 13,
      "question": "빌드 수행 시 소스 코드 품질 측정을 위해 사용되는 도구는 무엇입니까?",
      "options": [
        {"a": "FindBugs"},
        {"b": "Jenkins"},
        {"c": "Gradle"},
        {"d": "Nexus"}
      ],
      "answer": "a"
    },
    {
      "id": 14,
      "question": "빌드 스케줄 관리 도구는 빌드 결과를 ________로 공유할 수 있습니다.",
      "options": [
        {"a": "이메일"},
        {"b": "실행 파일"},
        {"c": "배포 로그"},
        {"d": "데이터베이스"}
      ],
      "answer": "a"
    },
    {
      "id": 15,
      "question": "CI/CD 환경에서 빌드 스케줄 도구의 주요 기능 중 하나는?",
      "options": [
        {"a": "작업 주기 설정"},
        {"b": "네트워크 관리"},
        {"c": "보안 정책 설정"},
        {"d": "운영체제 업데이트"}
      ],
      "answer": "a"
    }
  ]
}
